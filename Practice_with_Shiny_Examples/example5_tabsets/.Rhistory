library("swirl")
swirl()
mydf <- read.csv(path2csv,stringAsFactor=FALSE)
mydf <- read.csv(path2csv,stringAsFactors=FALSE)
mydf <- read.csv(path2csv,stringAsFactors = FALSE)
?read.csv()
mydf <- read.table(path2csv,stringAsFactors = FALSE)
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf).
cran <- tbl_df(mydf)
rm("mydf")
cran
?manip
select(cran,ip_id,package,country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran,-(X,size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US"| country=="IN")
filter(cran, size > 100500 & r_os == "linux-gnu")
filter(cran, size > 100500 , r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3 <- select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb = size/2^20)
mutate(cran3,size_gb = size_mb/2^20)
mutate(cran3,size_gb = size_mb/2^10)
cran3
mutate(cran3,size_mb = size/2^20, size_gb = size_mb/2^10)
mutate(cran3,correct_size = size+1000)
summarize(cran, avg_bytes = mean(size))
setwd("/Users/submarine/Git/Developing_Data_Products")
list.files()
fib(1)
library(fib)
source("fib.R")
fib(1)
fib(2)
fib(3)
fib(3)
shinyServer(10)
library(shiny)
runApp("~/shinyapp")
runApp(appDir=getwd())
mpg
mgp
mpg
runApp(appDir=getwd())
mtcars
mpgData <- mtcars
mpgData$am <- factor(mpgData$am, labels = c("Automatic", "Manual"))
mpgData$am
runApp(appDir=getwd())
runApp(appDir=getwd())
R -e "Shiny::runApp(appDir=getwd())"
runApp(appDir=getwd())
runExample("06_tabsets")
runApp(appDir(getwd()))
runApp(appDir=getwd())
getwd()
list.files()
setwd("/Users/submarine/Git/Developing_Data_Products/emample7_MoreWidgets")
setwd("/Users/submarine/Git/Developing_Data_Products/emample5_tabsets")
cd
getwd()
getwd()
setwd("/Users/submarine/Git/Developing_Data_Products")
setwd("/Users/submarine/Git/Developing_Data_Products/emample5_tabsets")
setwd("/Users/submarine/Git/Developing_Data_Products/example5_tabsets")
runApp(appDir=getwd())
runApp(appDir=getwd())
